Steps:

1. create a RDS instance 

Standard Create

create a rds instance of MySQl type

Templates - Free Tier

Credentials (keep the same user name and password):
user - admin
password - password

storage capacity - 20 GB

Disable auto storage scaling

Connectivity - Dont Connect to EC2

Network type - IPv4

VPC - default VPC

**public access - Yes (very important)**

create a new security group (dont use an existing one)

Availiability zone - us-east-1a

Database authentication 
Password authentication

Monitoring

Diable - Enhanced monitoring

Additional Configuration 

Disble automated backup

create the database


2. create a normal ec2 instance with amazon linux; allow ports http and ssh in security group

3. on the ec2 instance, run the following commands:

connect to the EC2 instance using the AWS Connect option via instance connect **using the "root" user**, not the normal ec2-user

b. wget https://raw.githubusercontent.com/gaurav157243/aws-project/master/springboot-backend/springboot-backend.jar

c. yum -y install java-1.8.0

d. create a file with the following details 

// create the application.properties with the following content:
vi application.properties

press i key

(paste the below lines in the application properties file)

--- copy content start --- dont copy this line

## temp file
server.port=80
spring.datasource.url=jdbc:mysql://<specify your database endpoint>:3306/test?createDatabaseIfNotExist=true
spring.datasource.username=admin
spring.datasource.password=password
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.dialect.storage_engine=innodb
spring.jpa.database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

--- copy content end --- dont copy this line

press esc key
press :wq


e. run the java application using the following commands

java -jar springboot-backend.jar 

the application by default will run on port 80

If there is no error while running the application, then

f. stop the application by pressing Ctrl c

g. run the below command (this will prevent the application to stop if the ssh session is terminated)

nohup java -jar springboot-backend.jar & 

h. Verify that the application is configured correctly by using the following url in the chrome tab:

http://<ec-ip-address>/api/v1/employees

You should see [] as the response in the browser tab

5a. create a load balancer and register the ec2 instance with the load balancer. 
Allow mapping for all AZs. 
In SG, allow all ports
while registering the ec2 instance use port 80
the ec2 intance should come to healthy state

5b. Verify that the load balcner is working correctly by using the following from your browser tab:

http://<alb dns name>/api/v1/employees

You should see [] as the response in the browser tab

6. once we have the load balancer address, then we need to add the same in the frontend UI files

main (in windows, the file name that you will see is only main, so modify that file)

search for /api/v1/employees and replace the load balancer with the new load balancer.


7. create a new s3 bucket and make the following changes:

a. make the bucket public by the policy, change the bucket name

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::<bucket-name>/*"
        }
    ]
}

b. Block public access (bucket settings) - set it to OFF

c. download the following file by clicking on the link - https://raw.githubusercontent.com/gaurav157243/aws-project/master/angular.zip

unzip the angular.zip file 
modify the "main" file and replace the load balancer to your load balancer 
search for api/v1/employees and then repalce alb

d. enable the Static site hosting option  - set the index to index.html file 

### The below commands are not required.

wget https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm
dnf install -y mysql-community-server


SPRING_DATASOURCE_URL=jdbc:mysql://${RDS_HOSTNAME}:3306/test?createDatabaseIfNotExist=true
SERVER_PORT=5000

SPRING_DATASOURCE_URL=jdbc:mysql://awseb-e-jkbcvxuhpi-stack-awsebrdsdatabase-6tnsb85yxcuc.cyvai2w24sic.us-east-1.rds.amazonaws.com:3306/test?createDatabaseIfNotExist=true
